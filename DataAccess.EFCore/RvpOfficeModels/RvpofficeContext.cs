// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataAccess.EFCore.RvpOfficeModels
{
    public partial class RvpofficeContext : DbContext
    {
        public RvpofficeContext()
        {
        }

        public RvpofficeContext(DbContextOptions<RvpofficeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BankNames> BankNames { get; set; }
        public virtual DbSet<Changwat> Changwat { get; set; }
        public virtual DbSet<HospitalTable> HospitalTable { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BankNames>(entity =>
            {
                entity.HasKey(e => e.Bank);

                entity.Property(e => e.Bank)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.BankCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Default0)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(75)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Changwat>(entity =>
            {
                entity.HasKey(e => e.Changwatshortname);

                entity.ToTable("CHANGWAT");

                /*entity.HasIndex(e => e.Changwatname)
                    .HasName("Viva_Chagwatname_Idx");*/

                entity.Property(e => e.Changwatshortname)
                    .HasColumnName("CHANGWATSHORTNAME")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Branchid)
                    .HasColumnName("BRANCHID")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Changwatname)
                    .HasColumnName("CHANGWATNAME")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Changwattrnsp)
                    .HasColumnName("CHANGWATTRNSP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Provinceid)
                    .HasColumnName("PROVINCEID")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HospitalTable>(entity =>
            {
                entity.HasKey(e => e.Hospitalid)
                    .HasName("PK_HOSPITAL");

                entity.ToTable("hospital_table");

                /*entity.HasIndex(e => e.BranchId)
                    .HasName("MFEC_IndexBranchID");

                entity.HasIndex(e => e.Changwatshortname)
                    .HasName("idxshortname");

                entity.HasIndex(e => e.Hospitalname)
                    .HasName("MFEC_IndexHospitalName");

                entity.HasIndex(e => e.Oicprov)
                    .HasName("idxHospital_OICProv");*/

                entity.Property(e => e.Hospitalid)
                    .HasColumnName("HOSPITALID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Accountname)
                    .HasColumnName("ACCOUNTNAME")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Accountno)
                    .HasColumnName("ACCOUNTNO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Active)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AddressCity)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressDistrict)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressMoo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressProvince)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressRoad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AddressSoi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Bankcode)
                    .HasColumnName("BANKCODE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Changwatshortname)
                    .IsRequired()
                    .HasColumnName("CHANGWATSHORTNAME")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmedAccountNoBy)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.ConfirmedAccountNodate).HasColumnType("datetime");

                entity.Property(e => e.ContactName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Contract)
                    .HasColumnName("CONTRACT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Eclaim)
                    .HasColumnName("EClaim")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ehi)
                    .HasColumnName("EHI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HosType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hospitalduedate).HasColumnName("HOSPITALDUEDATE");

                entity.Property(e => e.Hospitalestablishid)
                    .HasColumnName("HOSPITALESTABLISHID")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Hospitalname)
                    .HasColumnName("HOSPITALNAME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hospitaltradename)
                    .HasColumnName("HOSPITALTRADENAME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hosprefix)
                    .HasColumnName("hosprefix")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InputAccountNoBy)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InputAccountNoDate).HasColumnType("datetime");

                entity.Property(e => e.Inputby)
                    .HasColumnName("inputby")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Inputdate)
                    .HasColumnName("inputdate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Mediaclearing)
                    .HasColumnName("MEDIACLEARING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mobileno)
                    .HasColumnName("mobileno")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Oicprov)
                    .HasColumnName("OICProv")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodType).HasDefaultValueSql("((15))");

                entity.Property(e => e.Sapid)
                    .HasColumnName("SAPID")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TaxNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TelephoneNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZipCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}