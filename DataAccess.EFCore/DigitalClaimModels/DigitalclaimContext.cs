// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataAccess.EFCore.DigitalClaimModels
{
    public partial class DigitalclaimContext : DbContext
    {
        public DigitalclaimContext()
        {
        }

        public DigitalclaimContext(DbContextOptions<DigitalclaimContext> options)
            : base(options)
        {
        }

        public virtual DbSet<IclaimApproval> IclaimApproval { get; set; }
        public virtual DbSet<IclaimApprovalState> IclaimApprovalState { get; set; }
        public virtual DbSet<IclaimBankAccount> IclaimBankAccount { get; set; }
        public virtual DbSet<IclaimBankAccountLog> IclaimBankAccountLog { get; set; }
        public virtual DbSet<IclaimCheckDocuments> IclaimCheckDocuments { get; set; }
        public virtual DbSet<IclaimInvoiceCutLists> IclaimInvoiceCutLists { get; set; }
        public virtual DbSet<IclaimInvoiceDtVerify> IclaimInvoiceDtVerify { get; set; }
        public virtual DbSet<IclaimInvoiceStatus> IclaimInvoiceStatus { get; set; }
        public virtual DbSet<IclaimInvoiceStatusLog> IclaimInvoiceStatusLog { get; set; }
        public virtual DbSet<IclaimMasterTypes> IclaimMasterTypes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<IclaimApproval>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo })
                    .HasName("PK_HosApprovalStatus");

                entity.ToTable("IClaimApproval");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasColumnName("BranchID")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EverAuthorizeHosId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayMore)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RefCodeOtp)
                    .HasColumnName("RefCodeOTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimApprovalState>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo, e.StateNo })
                    .HasName("PK_HosApprovalStatusState");

                entity.ToTable("IClaimApprovalState");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasColumnName("BranchID")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimBankAccount>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo });

                entity.ToTable("IClaimBankAccount");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BankId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimBankAccountLog>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo, e.RunNo });

                entity.ToTable("IClaimBankAccount_Log");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BankId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimCheckDocuments>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo })
                    .HasName("PK_HosDocumentCheck");

                entity.ToTable("IClaimCheckDocuments");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BbCommentTypeId)
                    .HasColumnName("bbCommentTypeId")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BookbankComment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.BookbankStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SumStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<IclaimInvoiceCutLists>(entity =>
            {
                entity.HasKey(e => new { e.IdInvhd, e.CutListNo });

                entity.ToTable("IClaimInvoiceCutLists");

                entity.Property(e => e.IdInvhd).HasColumnName("id_invhd");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CutListName)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimInvoiceDtVerify>(entity =>
            {
                entity.HasKey(e => new { e.IdInvdt, e.Treatid })
                    .HasName("PK_IClaimInvoiceDtVerify");

                entity.ToTable("IClaimInvoiceDT_Verify");

                entity.Property(e => e.IdInvdt).HasColumnName("id_invdt");

                entity.Property(e => e.Treatid).HasColumnName("treatid");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Listno).HasColumnName("listno");

                entity.Property(e => e.Recordby)
                    .HasColumnName("recordby")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Recorddate)
                    .HasColumnName("recorddate")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<IclaimInvoiceStatus>(entity =>
            {
                entity.HasKey(e => e.IdInvhd)
                    .HasName("PK_IClaimInvoiceGroup");

                entity.ToTable("IClaimInvoiceStatus");

                entity.Property(e => e.IdInvhd)
                    .HasColumnName("id_invhd")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.InvCommentTypeId)
                    .HasColumnName("invCommentTypeId")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InvConfirmMoneyComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimInvoiceStatusLog>(entity =>
            {
                entity.HasKey(e => new { e.IdInvhd, e.StateNo })
                    .HasName("PK_IClaimInvoiceStatusState2");

                entity.ToTable("IClaimInvoiceStatus_Log");

                entity.Property(e => e.IdInvhd).HasColumnName("id_invhd");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasColumnName("BranchID")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.InvCommentTypeId)
                    .HasColumnName("invCommentTypeId")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimMasterTypes>(entity =>
            {
                entity.HasKey(e => e.TypeId)
                    .HasName("PK_MasterTypes");

                entity.ToTable("IClaimMasterTypes");

                entity.Property(e => e.TypeId)
                    .HasComment("รหัสประเภท")
                    .ValueGeneratedNever();

                entity.Property(e => e.IsActive).HasComment("0: ไม่ใช้งาน, 1: ใช้งานอยู่");

                entity.Property(e => e.ParentTypeId).HasComment("");

                entity.Property(e => e.TypeName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasComment("ชื่อประเภท");

                entity.Property(e => e.TypeNameIclaim)
                    .HasColumnName("TypeNameIClaim")
                    .HasMaxLength(500);
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}