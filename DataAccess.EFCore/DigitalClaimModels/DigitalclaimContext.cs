// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataAccess.EFCore.DigitalClaimModels
{
    public partial class DigitalclaimContext : DbContext
    {
        public DigitalclaimContext()
        {
        }

        public DigitalclaimContext(DbContextOptions<DigitalclaimContext> options)
            : base(options)
        {
        }

        public virtual DbSet<IclaimApproval> IclaimApproval { get; set; }
        public virtual DbSet<IclaimApprovalState> IclaimApprovalState { get; set; }
        public virtual DbSet<IclaimApprovalStatus> IclaimApprovalStatus { get; set; }
        public virtual DbSet<IclaimBankAccount> IclaimBankAccount { get; set; }
        public virtual DbSet<IclaimCheckDocuments> IclaimCheckDocuments { get; set; }
        public virtual DbSet<IclaimInvoiceStatus> IclaimInvoiceStatus { get; set; }
        public virtual DbSet<IclaimInvoiceStatusState> IclaimInvoiceStatusState { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<IclaimApproval>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo })
                    .HasName("PK_HosApprovalStatus");

                entity.ToTable("IClaimApproval");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasColumnName("BranchID")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayMore)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<IclaimApprovalState>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo, e.StateNo })
                    .HasName("PK_HosApprovalStatusState");

                entity.ToTable("IClaimApprovalState");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<IclaimApprovalStatus>(entity =>
            {
                entity.HasKey(e => e.StatusId)
                    .HasName("PK_ApprovalStatus");

                entity.ToTable("IClaimApprovalStatus");

                entity.Property(e => e.StatusId).ValueGeneratedNever();

                entity.Property(e => e.StatusNameEclaim).HasMaxLength(50);

                entity.Property(e => e.StatusNameIclaim).HasMaxLength(50);
            });

            modelBuilder.Entity<IclaimBankAccount>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo, e.RunNo })
                    .HasName("PK_IClaimBankAccount1");

                entity.ToTable("IClaimBankAccount");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BankId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimCheckDocuments>(entity =>
            {
                entity.HasKey(e => new { e.AccNo, e.VictimNo, e.ReqNo })
                    .HasName("PK_HosDocumentCheck");

                entity.ToTable("IClaimCheckDocuments");

                entity.Property(e => e.AccNo)
                    .HasColumnName("AccNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BookbankComment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.BookbankStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdCardComment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.IdCardStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SumStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<IclaimInvoiceStatus>(entity =>
            {
                entity.HasKey(e => e.IdInvhd)
                    .HasName("PK_IClaimInvoiceGroup");

                entity.ToTable("IClaimInvoiceStatus");

                entity.Property(e => e.IdInvhd)
                    .HasColumnName("id_invhd")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.InvConfirmMoneyComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IclaimInvoiceStatusState>(entity =>
            {
                entity.HasKey(e => new { e.IdInvhd, e.StateNo })
                    .HasName("PK_IClaimInvoiceStatusState2");

                entity.ToTable("IClaimInvoiceStatusState");

                entity.Property(e => e.IdInvhd).HasColumnName("id_invhd");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsertDate).HasColumnType("datetime");

                entity.Property(e => e.InvDocComment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RecordBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}